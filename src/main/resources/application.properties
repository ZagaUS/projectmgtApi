quarkus.http.port=8081
quarkus.http.test-port=8090
quarkus.http.host=0.0.0.0
quarkus.http.test-port=8083
#Mongodb connection string
quarkus.mongodb.connection-string=mongodb+srv://devteam:Zagateam2023*@applicationcluster.tvbngn1.mongodb.net/test

#kafka configuration
#  kafka.bootstrap.servers=localhost:29092

# #kafka mail producer configuration
# mp.messaging.outgoing.mail-out.connector=smallrye-kafka
# mp.messaging.outgoing.mail-out.topic=mail
# mp.messaging.outgoing.mail-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer   
# mp.messaging.outgoing.mail-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer


# #kafka mail consumer configuration
# mp.messaging.incoming.mail-in.connector=smallrye-kafka
# mp.messaging.incoming.mail-in.topic=mail
# mp.messaging.incoming.mail-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer   
# mp.messaging.incoming.mail-in.value.deserializer=com.zaga.consumer.MailDeserializer

#quarkus.http.cors = true
#quarkus.http.cors.origin = http://localhost:8081, http://localhost:8083
quarkus.http.cors = true
quarkus.http.cors.origins = *
quarkus.http.cors.headers = Authorization, Content-Type, X-Requested-With
quarkus.http.cors.methods = GET, POST, PUT, DELETE


quarkus.rest-client.pdf-api.url=http://localhost:8085/Zaga/document-service
quarkus.rest-client.pdf-api.scope=javax.inject.Singleton


# quarkus.rest-client.kie-server.url=http://localhost:8080
# quarkus.rest-client.kie-server.scope=javax.inject.Singleton
# quarkus.smallrye-health.ui.always-include=true

#Kafka Po Workflow producer
# mp.messaging.outgoing.po-out.connector=smallrye-kafka
# mp.messaging.outgoing.po-out.topic=po-workflow
# mp.messaging.outgoing.po-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer   
# mp.messaging.outgoing.po-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer


#Kafka Po Workflow Consumer
# mp.messaging.incoming.po-in.connector=smallrye-kafka
# mp.messaging.incoming.po-in.topic=po-workflow
# mp.messaging.incoming.po-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer   
# mp.messaging.incoming.po-in.value.deserializer=com.zaga.consumer.MailDeserializer

# quarkus.rest-client."com.zaga.client.PdfService".url=http://localhost:8080/Zaga/document-service
# quarkus.rest-client."com.zaga.client.PdfService".scope=javax.inject.Singleton

# test profile
%test.quarkus.mongodb.connection-string=mongodb://localhost:27017/test

# build
%build.quarkus.container-image.group=zagaoss
%build.quarkus.container-image.build=true

# deliver
%deliver.quarkus.container-image.group=zagaoss
%deliver.quarkus.container-image.push=true
%deliver.quarkus.container-image.registry=registry.hub.docker.com
%deliver.quarkus.container-image.username=${IMAGE_REPO_USER}
%deliver.quarkus.container-image.password=${IMAGE_REPO_PASS}

